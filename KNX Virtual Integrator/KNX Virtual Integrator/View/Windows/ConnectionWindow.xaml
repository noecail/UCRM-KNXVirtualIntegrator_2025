<mah:MetroWindow  x:Class="KNX_Virtual_Integrator.View.Windows.ConnectionWindow"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                  xmlns:viewmodel="clr-namespace:KNX_Virtual_Integrator.ViewModel"
                  d:DataContext="{d:DesignInstance Type=viewmodel:MainViewModel}"
                  mc:Ignorable="d"
                  Title="Connexion au Bus KNX" Height="550" Width="300"
                  TitleCharacterCasing="Normal"
                  ResizeMode="NoResize"
                  Background="White"
                  BorderThickness="0"
                  WindowTitleBrush="#369026"
                  NonActiveWindowTitleBrush="#4a9b3c"
                  Closing="ClosingConnectionWindow">
    
    <Window.Resources>
        <SolidColorBrush x:Key="ButtonBlue" Color="#4071B4"/>
        <SolidColorBrush x:Key="ButtonBlueAccentuated" Color="#355e97"/>
        <SolidColorBrush x:Key="KnxGreen" Color="#369026"/>
        <SolidColorBrush x:Key="KnxGreenAccentuated" Color="#4a9b3c"/>
        <SolidColorBrush x:Key="ButtonRed" Color="#C75150"/>
        <SolidColorBrush x:Key="ButtonRedAccentuated" Color="#B73B3B"/>
        <SolidColorBrush x:Key="ForegroundButtonColour" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="ButtonGray" Color="Gray"/>
        <SolidColorBrush x:Key="ButtonGrayAccentuated" Color="DimGray"/>
        

        <SolidColorBrush x:Key="ComboBoxLightBorder" Color="#b8b8b8"/>
        <SolidColorBrush x:Key="LightHover" Color="#d3d3d3"/>
        <SolidColorBrush x:Key="LightBackground" Color="White" />
        <SolidColorBrush x:Key="LightForeground" Color="Black" />


        <SolidColorBrush x:Key="ButtonDisabled" Color="#A0A0A0"/>
        
        <!-- Style pour le bouton Connexion -->
        <Style x:Key="ConnectButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource KnxGreen}"/>
            <Setter Property="Foreground" Value="{StaticResource LightBackground}"/>
            <Setter Property="FontSize" Value="12"/>            
            <Setter Property="Height" Value="25"/>
            <Setter Property="Padding" Value="0,0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="btnBorder" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="0"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="0" Width="15" Height="15" Margin="5,0,5,0" VerticalAlignment="Center">
                                    <Image.Source>
                                        <DrawingImage>
                                          <DrawingImage.Drawing>
                                            <DrawingGroup ClipGeometry="M0,0 V13.86 H14.08 V0 H0 Z">
                                              <DrawingGroup Opacity="1">
                                                <DrawingGroup Opacity="1">
                                                  <DrawingGroup Opacity="1">
                                                    <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M14.08,13.86z M0,0z M8.44,7.14L8.16,7.42 6.72,5.98 6.43,5.7 M5.99,5.25L5.23,4.49C5.16,4.42 5.09,4.39 5.01,4.39 4.93,4.39 4.87,4.41 4.81,4.46L3.7,5.58C3.08,6.17 2.73,6.99 2.73,7.84 2.71,8.48 2.92,9.11 3.3,9.62L3.51,9.9 3.26,10.15 0.1,13.3C0.04,13.37 0,13.44 0,13.51 0,13.59 0.02,13.66 0.07,13.72L0.09,13.72C0.09,13.72 0.12,13.76 0.12,13.76 0.17,13.82 0.25,13.86 0.33,13.86 0.4,13.86 0.47,13.83 0.52,13.78L3.67,10.63 3.91,10.39 4.19,10.59C4.75,10.99 5.41,11.2 6.09,11.2 6.96,11.2 7.77,10.87 8.39,10.27L9.47,9.18C9.54,9.12 9.57,9.04 9.57,8.95 9.58,8.87 9.55,8.8 9.5,8.76L8.61,7.87 5.99,5.25z M8.75,8.95L8.49,9.23 7.94,9.81C7.44,10.3 6.8,10.56 6.11,10.56 5.43,10.56 4.78,10.3 4.29,9.82L4.14,9.67C3.66,9.18 3.39,8.53 3.38,7.84 3.39,7.14 3.66,6.5 4.15,6.03L4.72,5.45 5.01,5.16 5.29,5.45 8.48,8.68 8.75,8.95z" />
                                                    <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M14.08,13.86z M0,0z M13.98,0.56C14.11,0.44,14.12,0.25,14.01,0.13L14.01,0.13C14.01,0.13 13.98,0.0900000000000001 13.98,0.0900000000000001 13.91,0.03 13.84,0 13.76,0 13.68,0 13.61,0.03 13.56,0.08L11,2.64 10.75,2.88 10.48,2.68C9.92,2.26 9.26,2.04 8.56,2.04 7.71,2.04 6.91,2.37 6.31,2.97L5.22,4.05C5.16,4.11 5.12,4.2 5.12,4.28 5.12,4.37 5.14,4.43 5.2,4.48L9.44,8.72C9.51,8.79 9.58,8.83 9.67,8.83 9.74,8.83 9.81,8.8 9.86,8.75L10.98,7.66C11.58,7.07 11.92,6.24 11.91,5.39 11.91,4.76 11.73,4.15 11.39,3.62L11.22,3.35 11.44,3.13 13.98,0.56z M11.26,5.39C11.26,6.06,11,6.7,10.53,7.18L9.95,7.76 9.67,8.05 9.38,7.76 6.17,4.55 5.87,4.26 6.18,3.97 6.76,3.43C7.22,2.94 7.87,2.67 8.56,2.67 9.22,2.67 9.84,2.92 10.31,3.38L10.35,3.42 10.47,3.51 10.5,3.53 10.53,3.56C10.99,4.06,11.25,4.71,11.25,5.38z" />
                                                  </DrawingGroup>
                                                </DrawingGroup>
                                              </DrawingGroup>
                                            </DrawingGroup>
                                          </DrawingImage.Drawing>
                                        </DrawingImage>
                                    </Image.Source>
                                </Image>
                                <TextBlock x:Name="txtblock" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" Margin="0,0,10,0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{StaticResource KnxGreenAccentuated}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{StaticResource KnxGreenAccentuated}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Style pour le bouton DÃ©connexion -->
        <Style x:Key="DisconnectButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource ButtonRed}"/>
            <Setter Property="Foreground" Value="#FFFFFF"/>
            <Setter Property="FontSize" Value="12"/>            
            <Setter Property="Height" Value="25"/>
            <Setter Property="Padding" Value="0,0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="btnBorder" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="0"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Image Grid.Column="0" Width="15" Height="15" Margin="5,0,5,0" VerticalAlignment="Center">
                                    <Image.Source>
                                        <DrawingImage>
                                          <DrawingImage.Drawing>
                                            <DrawingGroup ClipGeometry="M0,0 V13.71 H13.71 V0 H0 Z">
                                              <DrawingGroup Opacity="1">
                                                <DrawingGroup Opacity="1">
                                                  <DrawingGroup Opacity="1">
                                                    <DrawingGroup Opacity="1">
                                                      <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M13.71,13.71z M0,0z M8.14,8.19C8.18,8.12 8.2,8.05 8.19,7.97 8.18,7.88 8.13,7.81 8.06,7.75 8.01,7.71 7.94,7.69 7.87,7.69 7.8,7.69 7.74,7.71 7.69,7.74L6.48,8.95 6.2,9.23 4.76,7.79 4.47,7.51 4.76,7.22 5.97,6.01C6.01,5.95 6.03,5.87 6.01,5.79 6,5.71 5.96,5.63 5.89,5.58 5.83,5.54 5.76,5.51 5.69,5.51 5.63,5.51 5.57,5.53 5.52,5.57L4.31,6.77 4.03,7.06 3.27,6.3C3.2,6.23 3.13,6.2 3.05,6.2 2.97,6.2 2.91,6.22 2.85,6.27L1.74,7.39C1.12,7.98 0.769999999999999,8.8 0.769999999999999,9.65 0.749999999999999,10.29 0.959999999999999,10.92 1.34,11.43L1.55,11.71 1.3,11.96 0.1,13.15C0.04,13.22 0,13.29 0,13.36 0,13.44 0.02,13.51 0.07,13.57L0.09,13.57C0.09,13.57 0.12,13.61 0.12,13.61 0.17,13.67 0.25,13.71 0.33,13.71 0.4,13.71 0.47,13.68 0.52,13.63L1.71,12.44 1.95,12.2 2.23,12.4C2.79,12.8 3.45,13.01 4.13,13.01 5,13.01 5.81,12.68 6.43,12.08L7.51,10.99C7.58,10.93 7.61,10.85 7.61,10.76 7.62,10.68 7.59,10.61 7.54,10.57L6.65,9.68 6.93,9.4 8.14,8.19z M6.79,10.76L6.53,11.04 5.98,11.62C5.48,12.11 4.84,12.37 4.15,12.37 3.46,12.37 2.82,12.11 2.33,11.63L2.18,11.48C1.7,10.99 1.43,10.34 1.42,9.65 1.43,8.95 1.7,8.31 2.19,7.84L2.76,7.26 3.05,6.97 3.33,7.26 6.52,10.49 6.79,10.76z" />
                                                      <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M13.71,13.71z M0,0z M13.6,0.56C13.73,0.44,13.74,0.25,13.63,0.13L13.62,0.13C13.62,0.13 13.59,0.0900000000000001 13.59,0.0900000000000001 13.53,0.0300000000000001 13.46,5.55111512312578E-17 13.38,5.55111512312578E-17 13.3,5.55111512312578E-17 13.23,0.0300000000000001 13.18,0.0800000000000001L11.92,1.34 11.67,1.58 11.4,1.38C10.84,0.96 10.17,0.74 9.47,0.74 8.62,0.74 7.81,1.07 7.21,1.67L6.12,2.75C6.06,2.81 6.02,2.9 6.02,2.98 6.02,3.07 6.04,3.13 6.1,3.18L10.36,7.44C10.43,7.51 10.5,7.55 10.59,7.55 10.66,7.55 10.73,7.52 10.78,7.47L11.9,6.38C12.5,5.79 12.84,4.95 12.83,4.1 12.83,3.47 12.65,2.85 12.31,2.32L12.14,2.05 12.36,1.83 13.6,0.559999999999999z M12.18,4.1C12.19,4.77,11.92,5.42,11.45,5.9L10.87,6.48 10.59,6.77 10.3,6.48 7.08,3.26 6.78,2.97 7.09,2.68 7.67,2.14C8.13,1.65 8.78,1.38 9.48,1.38 10.14,1.38 10.77,1.63 11.24,2.09L11.28,2.13 11.4,2.22 11.43,2.24 11.46,2.27C11.92,2.77,12.18,3.42,12.18,4.1z" />
                                                    </DrawingGroup>
                                                  </DrawingGroup>
                                                  <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M13.71,13.71z M0,0z M3.91,4.83C3.91,4.65 4.04,4.51 4.21,4.51 4.39,4.51 4.51,4.64 4.51,4.83 4.51,5.02 4.39,5.15 4.21,5.15 4.03,5.15 3.91,5.01 3.91,4.83z M4.04,4.1L3.97,1.65 4.46,1.65 4.39,4.1 4.04,4.1z" />
                                                </DrawingGroup>
                                              </DrawingGroup>
                                            </DrawingGroup>
                                          </DrawingImage.Drawing>
                                        </DrawingImage>
                                    </Image.Source>
                                </Image>
                                <TextBlock x:Name="txtblock" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" Margin="0,0,10,0"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="btnBorder" Property="Background" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{StaticResource ButtonRedAccentuated}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{StaticResource ButtonRedAccentuated}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Style pour le bouton refresh -->
        <Style x:Key="RefreshButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource ButtonBlue}"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundButtonColour}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="btnBorder" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Survol -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{StaticResource ButtonBlueAccentuated}"/>
                            </Trigger>
                            <!-- Clic -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{StaticResource ButtonBlueAccentuated}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Style pour le bouton refresh -->
        <Style x:Key="ResearchButton" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource ButtonGray}"/>
            <Setter Property="Foreground" Value="{StaticResource ForegroundButtonColour}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="btnBorder" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Survol -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{StaticResource ButtonGrayAccentuated}"/>
                            </Trigger>
                            <!-- Clic -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{StaticResource ButtonGrayAccentuated}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Style pour le bouton refresh -->
        <Style x:Key="ImportKeysButton" TargetType="Button">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="btnBorder" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="0"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Survol -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{StaticResource ButtonGrayAccentuated}"/>
                            </Trigger>
                            <!-- Clic -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="btnBorder" Property="Background" Value="{StaticResource ButtonGrayAccentuated}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Style pour le menu dÃ©roulant -->
        <Style x:Key="LightComboBoxItemStyle" TargetType="ComboBoxItem">
            <Setter Property="Background" Value="{StaticResource LightBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource LightForeground}"/>
            <Setter Property="Padding" Value="5,2.5,0,0"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#729CD5" TargetName="Border"/>
                                <Setter Property="Foreground" Value="#ffffff"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource ButtonBlue}" TargetName="Border"/>
                                <Setter Property="Foreground" Value="#FFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Style pour la sÃ©lection de la liste dÃ©roulante-->
        <ControlTemplate x:Key="ComboBoxToggleButtonTemplateLight" TargetType="ToggleButton">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Border x:Name="templateRoot"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{StaticResource ComboBoxLightBorder}" 
                        BorderThickness="1"
                        Grid.RowSpan="2"
                        CornerRadius="2"/>
                <Border x:Name="border" 
                        BorderBrush="{StaticResource ComboBoxLightBorder}"
                        BorderThickness="1" 
                        Background="{TemplateBinding Background}" 
                        Grid.RowSpan="2" 
                        CornerRadius="0"/>
                <Path x:Name="Arrow"
                      HorizontalAlignment="Right"
                      Margin="0,0,10,0"
                      VerticalAlignment="Center"
                      Data="M 0 0 L 4 4 L 8 0 Z"
                      Fill="{StaticResource LightForeground}"/>
            </Grid>
        </ControlTemplate>
        
        <!-- Style pour la boÃ®te combinÃ©e -->
        <Style x:Key="LightComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Foreground" Value="{StaticResource LightForeground}"/>
            <Setter Property="Background" Value="{StaticResource LightBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBoxLightBorder}"/>
            <Setter Property="BorderThickness" Value="1,1,1,1"/>
            <Setter Property="Padding" Value="5,3"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource LightComboBoxItemStyle}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton"
                                          Template="{StaticResource ComboBoxToggleButtonTemplateLight}"
                                          Focusable="False"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">
                                <ToggleButton.Background>
                                    <StaticResource ResourceKey="LightBackground"/>
                                </ToggleButton.Background>
                                <ToggleButton.Foreground>
                                    <StaticResource ResourceKey="LightBackground"/>
                                </ToggleButton.Foreground>
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite"
                                              IsHitTestVisible="False"
                                              Content="{TemplateBinding SelectionBoxItem}"
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              Margin="7,3,23,3"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"/>
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True"
                                   Focusable="False"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                            Background="{StaticResource LightBackground}"
                                            BorderThickness="1"
                                            BorderBrush="{StaticResource ComboBoxLightBorder}"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow" SourceName="Popup" Value="True">
                                <Setter Property="Margin" TargetName="DropDown" Value="0,0,5,5"/>
                                <Setter Property="SnapsToDevicePixels" TargetName="DropDown" Value="True"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="ToggleButton" Value="{StaticResource LightHover}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{StaticResource LightForeground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Style pour les interfaces dÃ©couvertes -->
        <Style x:Key="LightInterfacesItem" TargetType="ListBoxItem">
            <Setter Property="Background" Value="{StaticResource LightBackground }"/>
            <Setter Property="Foreground" Value="{StaticResource LightForeground}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="InterfaceTextBlock" TargetType="TextBlock">
            <Setter Property="FontStyle" Value="Italic"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=DisconnectButton, Path=IsEnabled}" Value="True">
                    <Setter Property="Foreground" Value ="{StaticResource KnxGreen}"/>
                </DataTrigger>
                
                <DataTrigger Binding="{Binding ElementName=DisconnectButton, Path=IsEnabled}" Value="False">
                    <Setter Property="Foreground" Value ="Black"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    
    <Border BorderBrush="#369226" BorderThickness="1.5">
        <Grid>
            <!-- Define rows and columns for the grid -->
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="80"/>
                <RowDefinition Height="100"/>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>

            <!-- Bus Connection Type Selection Section -->
            <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center" Margin="10,10,10,5">
                <TextBlock Text="Type de connexion :" VerticalAlignment="Center" Margin="0,0,10,0"/>
                <ComboBox Name="ConnectionTypeComboBox" Style="{StaticResource LightComboBoxStyle}"
                          Width="120" Height="25"
                          VerticalAlignment="Center"
                          FontSize="10" 
                          SelectedIndex="0" Padding="0"
                          SelectedItem="{Binding SelectedConnectionType, Mode=TwoWay}"
                          ItemsSource="{Binding ConnectionTypes}">
                </ComboBox>
            </StackPanel>

            <!-- Current Interface Display Section -->
            <StackPanel Grid.Row="1" Orientation="Vertical" HorizontalAlignment="Left" Margin="20,5,20,5" Width="250">
                <TextBlock
                    Margin="5,0,5,0"
                    Text="Interface actuellement connectÃ©e :"
                    TextAlignment="Left"
                    />
                <TextBlock
                    Margin="5,0,5,0"
                    Text="{Binding Path=CurrentInterface}"
                    Style="{StaticResource InterfaceTextBlock}"
                    TextAlignment="Left"/>
            </StackPanel>
            
            <!-- Discovered Interfaces Section -->
            <StackPanel Grid.Row="2" Orientation="Vertical" HorizontalAlignment="Center" Margin="10,5,10,10">
                <Grid Margin="3,0,3,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    
                    <TextBlock Text="Interfaces disponibles :" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,0,0" Grid.Column="0" />

                    <Button Grid.Column="1" Command="{Binding RefreshInterfacesCommand}"
                            Style="{StaticResource RefreshButton}"
                            Padding="10,0"
                            Margin="0,0,0,0">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="â²" FontSize="12" Height="20" Margin="0,2,5,0" VerticalAlignment="Center" />
                            <TextBlock Text="RafraÃ®chir" FontSize="10" VerticalAlignment="Center" Margin="0,0,0,0"/>
                        </StackPanel>
                    </Button>
                </Grid>

                <!-- List of discovered interfaces -->
                <ListBox Name="InterfaceListBox" Width="250" Height="120" 
                         ItemsSource="{Binding DiscoveredInterfaces}" 
                         SelectedItem="{Binding SelectedInterface}" 
                         BorderThickness="1"
                         BorderBrush="{StaticResource ComboBoxLightBorder}"
                         Margin="0,5,0,0"
                         SelectionMode="Single">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <!-- Style de base du ListBoxItem -->
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>

                            <!-- DÃ©finir le Trigger pour IsMouseOver -->
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#FFD8E0FF"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#FF729CD5"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ListBox.ItemContainerStyle>

                    <!-- ItemTemplate pour afficher les donnÃ©es -->
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding DisplayName}" 
                                       FontStyle="Italic"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </StackPanel>

            <!-- Section connexion Ã  distance-->
            <StackPanel Grid.Row="3" Orientation="Vertical" HorizontalAlignment="Center" Margin="10,0,10,0">
                <TextBlock
                    Text="Connexion Ã  distance (NAT)"
                    TextAlignment="Center"
                    Margin="0,0,0,5"
                />
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="10,0,10,0">
                    <TextBlock
                           Text="IP publique du routeur"
                           VerticalAlignment="Center"
                           TextAlignment="Left"
                           Margin="0,0,10,0"
                           />
                    <TextBox
                             Width="80"
                             Margin="10,0,0,0"
                             VerticalAlignment="Center"
                             Text="{Binding _busConnection.NatAddress}"
                             />
                </StackPanel>
                <Button Command="{Binding Path=TestRechercherCommand}"
                        Style="{StaticResource ResearchButton}"
                        Padding="12,0"
                        Margin="0,5">
                        <TextBlock Text="Connexion (NAT)" FontSize="10" VerticalAlignment="Center" Margin="0,0,0,0"/>
                   
                </Button>
            </StackPanel>
            
            <!-- Section connexion IP Secure-->
            <StackPanel Grid.Row="4" Orientation="Vertical" HorizontalAlignment="Center" Margin="10,10,10,0" >
                <TextBlock
                    Text="Connexion via IP Secure"
                    TextAlignment="Center"
                />
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>
                
                    <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Left" Margin="10,0,10,0">
                        <TextBlock
                            Text="Fichier de clÃ©s .knxkeys"
                            VerticalAlignment="Center"
                            TextAlignment="Left"
                            Margin="0,0,42,0"
                        />
                        <Button
                            Style="{StaticResource ImportKeysButton}"
                            Click="ImportKeysFileButtonClick"                       
                            Margin="10.5,0,0,0">
                            <TextBlock Text="importer clÃ©s"
                                       Width="78"
                                       FontSize="10"
                                       TextAlignment="Center"
                                       VerticalAlignment="Center"
                                       Margin="0,0,0,0"/>

                        </Button>
                    </StackPanel>
                    
                    <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Left" Margin="10,0,10,0">
                        <TextBlock
                            Text="Mot de passe du fichier de clÃ©s"
                            VerticalAlignment="Center"
                            TextAlignment="Left"
                            Margin="0,0,10,0"
                        />
                        <TextBox
                            Width="80"
                            Margin="0,0,0,0"
                            VerticalAlignment="Center"
                            Text="{Binding _busConnection.Password}"
                        />
                    </StackPanel>
                </Grid>
            </StackPanel>
            
            <!-- Buttons for connection and disconnection -->
            <Grid Grid.Row="5" Margin="20,0" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" /> <!-- Colonne pour le bouton de dÃ©connexion -->
                    <ColumnDefinition Width="*" /> <!-- Colonne pour le bouton de connexion -->
                </Grid.ColumnDefinitions>
            
                <!-- Bouton DÃ©connexion, collÃ© Ã  gauche -->
                <Button Grid.Column="0" Name="DisconnectButton" Content="DÃ©connexion" 
                        Style="{StaticResource DisconnectButton}"
                        Margin="5" Padding="5,2"
                        Command="{Binding DisconnectBusCommand}" 
                        IsEnabled="{Binding IsConnected}"
                        HorizontalAlignment="Left" />
            
                <!-- Bouton Connexion, collÃ© Ã  droite -->
                <Button Grid.Column="1" Name="ConnectButton" Content="Connexion" 
                        Style="{StaticResource ConnectButton}"
                        Margin="5" Padding="5,2"
                        Foreground="{StaticResource ForegroundButtonColour}"
                        Command="{Binding ConnectBusCommand}"
                        HorizontalAlignment="Right" />
            </Grid>

            
        </Grid>
    </Border>

    
</mah:MetroWindow>
