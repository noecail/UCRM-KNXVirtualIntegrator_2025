<mah:MetroWindow x:Class="KNX_Virtual_Integrator.View.Windows.TestConfigWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:utils="clr-namespace:KNX_Virtual_Integrator.View.Utils"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:viewmodel="clr-namespace:KNX_Virtual_Integrator.ViewModel"
                 xmlns:entities="clr-namespace:KNX_Virtual_Integrator.Model.Entities"
                 xmlns:windows="clr-namespace:KNX_Virtual_Integrator.View.Windows"
                 d:DataContext="{d:DesignInstance Type=viewmodel:MainViewModel}"
                 mc:Ignorable="d"
                 Title="{DynamicResource TestWindowTitle}" Height="710" Width="1225"
                 TitleCharacterCasing="Normal"
                 ResizeMode="NoResize"
                 Background="{StaticResource WhiteBackgroundBrush}"
                 BorderThickness="2"
                 BorderBrush="{StaticResource KnxGreenBrush}"
                 WindowTitleBrush="{StaticResource KnxGreenBrush}"
                 NonActiveWindowTitleBrush="{StaticResource KnxLightGreenBrush}"
                 Closing="ClosingTestConfigWindow">

    <Window.Resources>
        
        <!-- Clé permettant d'appeler les BigIntegerToStringConverter plus facilement -->
        <utils:BigIntegerToStringConverter x:Key="BigIntegerConverter"/>
        
        <windows:ChosenModelDataTemplateSelector x:Key="ChosenModelTemplateSelector"/>
        
        <!-- Styles pour les Éléments à Tester (affichage assez long, 
             recommandé de garder Collapsed dans l'éditeur de code) -->
        <DataTemplate x:Key="ElementListBoxTemplateLight" DataType="{x:Type entities:TestedElement}">
            <!--Élément à Tester-->
            <Border Background="{StaticResource OffWhiteBackgroundBrush}"
                    BorderBrush="{StaticResource LightGrayBorderBrush}"
                    BorderThickness="1"
                    Margin="0,10,10,0">
                <StackPanel Orientation="Vertical">
                    <!-- Titre : "Élément à tester" -->
                    <TextBlock Text="{DynamicResource TestedElement}" Style="{StaticResource TitleTextLight}"
                               Margin="0,0,0,5" />

                    <!-- Tableau principal : Cmd(s) et IE(s)-->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />   <!--"Envoi" + Réception-->
                            <RowDefinition Height="Auto" />   <!--"Type de DPT" + Type(s) Cmd + Type(s) IE-->
                            <RowDefinition Height="Auto" />   <!--"Adresse liée" + @Cmd + @IE-->
                            <RowDefinition Height="Auto" />
                            <!--"Valeurs" + Valeur(s) Cmd + Valeur(s) IE + Bouton supprimer Test-->
                            <RowDefinition Height="Auto" />   <!--Bouton ajouter Test-->
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />  <!--Titres-->
                            <ColumnDefinition Width="Auto" />  <!--Cmd(s)-->
                            <ColumnDefinition Width="Auto" />  <!--IE(s) + Remove Test-->
                            <ColumnDefinition Width="Auto" />  <!--Add Test-->
                        </Grid.ColumnDefinitions>

                        <!--Colonne 1 : Titres-->
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="{DynamicResource DptType}"
                                   VerticalAlignment="Center" Margin="3,0,2,0" />
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="{DynamicResource LinkedAddress}"
                                   VerticalAlignment="Center" Margin="3,0,2,0" />
                        <StackPanel Grid.Row="3" Grid.Column="0" Orientation="Horizontal" Margin="3,10,2,0">
                            <Image Style="{StaticResource TooltipImage}"
                                   Height="15"
                                   VerticalAlignment="Top"
                                   HorizontalAlignment="Left"
                                   Margin="0,1,3,0">
                                <ToolTipService.ToolTip>
                                    <ToolTip Background="{StaticResource WhiteBackgroundBrush}"
                                             BorderBrush="{StaticResource KnxGreenBrush}">
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock Foreground="{StaticResource KnxGreenBrush}"
                                                       FontWeight="SemiBold"
                                                       Text="{DynamicResource ValuesTooltipTitle}"/>
                                            <TextBlock Text="{DynamicResource ValuesTooltipMessage}"/>
                                        </StackPanel>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                            </Image>
                            <TextBlock Text="{DynamicResource Values}" 
                                       VerticalAlignment="Top"/>
                        </StackPanel>

                        <!--Colonne 2 : Cmd(s)-->
                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{DynamicResource Dispatch(es)}" Margin="5,0,0,0" />
                        <!--Type de DPT de l'envoi-->
                        <Border Grid.Row="1" Grid.Column="1" Background="{StaticResource OffWhiteBackgroundBrush}">
                            <ListBox
                                ItemsSource="{Binding TestsCmd}"
                                Background="{StaticResource NoColorBrush}"
                                ItemContainerStyle="{StaticResource DptListBoxItemContainerStyleLight}">

                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" Background="{StaticResource NoColorBrush}" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <!--Explication double border : border intérieure => style + marge, border extérieure => background derrière la marge-->
                                        <Border Background="{StaticResource OffWhiteBackgroundBrush}">
                                            <Border
                                                Width="{Binding DataContext.BoxWidth, RelativeSource={RelativeSource AncestorType=Window}}"
                                                Height="35"
                                                Margin="0,0,14,0"
                                                Style="{StaticResource ValueBorderLight}">
                                                <TextBlock Text="{Binding Type}"
                                                           VerticalAlignment="Center"
                                                           TextAlignment="Center" />
                                            </Border>
                                        </Border>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Border>
                        <!--Adresses de l'envoi-->
                        <Border Grid.Row="2" Grid.Column="1">
                            <ListBox
                                ItemsSource="{Binding TestsCmd}"
                                Background="{StaticResource OffWhiteBackgroundBrush}"
                                ItemContainerStyle="{StaticResource DptListBoxItemContainerStyleLight}">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"
                                                    VerticalAlignment="Top" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <!--Explication double border : border intérieure => style + marge, border extérieure => background derrière la marge-->
                                        <Border Background="{StaticResource OffWhiteBackgroundBrush}">
                                            <Border
                                                Width="{Binding DataContext.BoxWidth, RelativeSource={RelativeSource AncestorType=Window}}"
                                                Height="35"
                                                Margin="0,0,14,0"
                                                Style="{StaticResource ValueBorderLight}">
                                                <TextBox Text="{Binding Address}"
                                                         VerticalAlignment="Center"
                                                         TextAlignment="Center"
                                                         IsReadOnly="True"
                                                         Background="{StaticResource OffWhiteBackgroundBrush}"
                                                         BorderThickness="0" />
                                            </Border>
                                        </Border>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Border>
                        <!--Valeurs de l'envoi-->
                        <Border Grid.Row="3" Grid.Column="1">
                            <ListBox ItemsSource="{Binding TestsCmd}"
                                     Background="{StaticResource OffWhiteBackgroundBrush}"
                                     ItemContainerStyle="{StaticResource DptListBoxItemContainerStyleLight}">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <ItemsControl ItemsSource="{Binding IntValue}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Vertical" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBox
                                                            Text="{Binding BigIntegerValue, Converter={StaticResource BigIntegerConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                            HorizontalContentAlignment="Center"
                                                            VerticalContentAlignment="Center"
                                                            Width="{Binding DataContext.BoxWidth, RelativeSource={RelativeSource AncestorType=Window}}"
                                                            Height="35"
                                                            Background="{StaticResource OffWhiteBackgroundBrush}"
                                                            IsReadOnly="True"
                                                            VerticalAlignment="Center">
                                                            <!--Disable the textbox if the expected value is unknown-->
                                                            <TextBox.Style>
                                                                <Style TargetType="TextBox">
                                                                    <Setter Property="IsEnabled" Value="True" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding IsEnabled}"
                                                                            Value="false ">
                                                                            <Setter Property="IsEnabled" Value="False" />
                                                                            <Setter Property="Foreground"
                                                                                Value="{StaticResource NoColorBrush}" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBox.Style>
                                                        </TextBox>
                                                        <!--Button to reset the content of a Value that has been deactivated-->
                                                        <Border Background="{StaticResource OffWhiteBackgroundBrush}">
                                                            <StackPanel Orientation="Vertical"
                                                                        HorizontalAlignment="Left"
                                                                        VerticalAlignment="Bottom">
                                                                <Button
                                                                    HorizontalAlignment="Left"
                                                                    VerticalAlignment="Bottom"
                                                                    Margin="2,0,0,0"
                                                                    Style="{StaticResource ResetValueButtonStyle}"
                                                                    IsEnabled="False"
                                                                    Visibility="Hidden">
                                                                    <TextBlock Text="⟲" FontSize="8" Margin="1"
                                                                               HorizontalAlignment="Center"
                                                                               VerticalAlignment="Center" />
                                                                </Button>
                                                            </StackPanel>
                                                        </Border>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Border>

                        <!--Colonne 3 : IE(s)-->
                        <TextBlock Grid.Row="0" Grid.Column="2" Text="{DynamicResource Reception(s)}" Margin="5,0,0,0" />
                        <!--Type de DPT à recevoir-->
                        <ListBox Grid.Row="1" Grid.Column="2"
                                 ItemsSource="{Binding TestsIe}"
                                 Background="{StaticResource OffWhiteBackgroundBrush}"
                                 ItemContainerStyle="{StaticResource DptListBoxItemContainerStyleLight}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <!--Explication double border : border intérieure => style + marge, border extérieure => background derrière la marge-->
                                    <Border Background="{StaticResource OffWhiteBackgroundBrush}">
                                        <Border
                                            Width="{Binding DataContext.BoxWidth, RelativeSource={RelativeSource AncestorType=Window}}"
                                            Height="35"
                                            Margin="0,0,14,0"
                                            Style="{StaticResource ValueBorderLight}">
                                            <TextBlock Text="{Binding Type}"
                                                       VerticalAlignment="Center"
                                                       TextAlignment="Center"
                                                       Background="{StaticResource OffWhiteBackgroundBrush}" />
                                        </Border>
                                    </Border>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <!--Adresses de la réception-->
                        <ListBox Grid.Row="2" Grid.Column="2"
                                 ItemsSource="{Binding TestsIe}"
                                 Background="{StaticResource OffWhiteBackgroundBrush}"
                                 ItemContainerStyle="{StaticResource DptListBoxItemContainerStyleLight}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"
                                                VerticalAlignment="Top" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <!--Explication double border : border intérieure => style + marge, border extérieure => background derrière la marge-->
                                    <Border Background="{StaticResource OffWhiteBackgroundBrush}">
                                        <Border
                                            Width="{Binding DataContext.BoxWidth, RelativeSource={RelativeSource AncestorType=Window}}"
                                            Height="35"
                                            Margin="0,0,14,0"
                                            Style="{StaticResource ValueBorderLight}">
                                            <TextBox Text="{Binding Address}"
                                                     VerticalAlignment="Center"
                                                     TextAlignment="Center"
                                                     IsReadOnly="True"
                                                     Background="{StaticResource OffWhiteBackgroundBrush}"
                                                     BorderThickness="0" />
                                        </Border>
                                    </Border>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <!--Valeurs de la réception-->
                        <ListBox Grid.Row="3" Grid.Column="2"
                                 ItemsSource="{Binding TestsIe}"
                                 Background="{StaticResource OffWhiteBackgroundBrush}"
                                 ItemContainerStyle="{StaticResource DptListBoxItemContainerStyleLight}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <ItemsControl ItemsSource="{Binding IntValue}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Vertical" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBox
                                                        Text="{Binding BigIntegerValue, Converter={StaticResource BigIntegerConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        HorizontalContentAlignment="Center"
                                                        VerticalContentAlignment="Center"
                                                        IsReadOnly="True"
                                                        Width="{Binding DataContext.BoxWidth, RelativeSource={RelativeSource AncestorType=Window}}"
                                                        Background="{StaticResource OffWhiteBackgroundBrush}"
                                                        Height="35">

                                                        <!--Disable the textbox if the expected value is unknown-->
                                                        <TextBox.Style>
                                                            <Style TargetType="TextBox">
                                                                <Setter Property="IsEnabled" Value="True" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsEnabled}"
                                                                        Value="false">
                                                                        <Setter Property="IsEnabled" Value="False" />
                                                                        <Setter Property="Foreground"
                                                                            Value="{StaticResource NoColorBrush}" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBox.Style>
                                                    </TextBox>
                                                    <!--Button to deactivate/reset the content of a Value that has been deactivated-->
                                                    <Border Background="{StaticResource OffWhiteBackgroundBrush}">
                                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Left"
                                                                    VerticalAlignment="Bottom">
                                                            <Button
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Bottom"
                                                                Margin="2,0,0,2"
                                                                Style="{StaticResource DeactivateValueButtonStyle}"
                                                                IsEnabled="False"
                                                                Visibility="Hidden">
                                                                <TextBlock Text="x" FontSize="8" Margin="1"
                                                                           HorizontalAlignment="Center"
                                                                           VerticalAlignment="Center" />
                                                            </Button>
                                                            <Button
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Bottom"
                                                                Margin="2,0,0,0"
                                                                Style="{StaticResource ResetValueButtonStyle}"
                                                                IsEnabled="False"
                                                                Visibility="Hidden">
                                                                <TextBlock Text="⟲" FontSize="8" Margin="1"
                                                                           HorizontalAlignment="Center"
                                                                           VerticalAlignment="Center" />
                                                            </Button>
                                                        </StackPanel>
                                                    </Border>
                                                    <!--Button to remove a Test line, should only appear to the right of the last Value of the Test-->
                                                    <Border Background="{StaticResource OffWhiteBackgroundBrush}">
                                                        <Button
                                                            Margin="10,0,0,0"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Center"
                                                            Visibility="Collapsed"
                                                            Style="{StaticResource RemoveTestButtonStyleLight}"
                                                            >
                                                        </Button>
                                                    </Border>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <!--Colonne 4 : Bouton ajouter test-->
                        <Button Grid.Row="4" Grid.Column="3"
                                Margin="5"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Style="{StaticResource AddTestButtonStyleLight}"
                                IsEnabled="False"
                                Visibility="Hidden" />

                    </Grid>
                </StackPanel>
            </Border>
        </DataTemplate>
        
        <DataTemplate x:Key="ElementListBoxTemplateDark" DataType="{x:Type entities:TestedElement}">
            <!--Élément à Tester-->
            <Border Background="{StaticResource DarkGrayBackgroundBrush}"
                    BorderBrush="{StaticResource LightGrayBorderBrush}"
                    BorderThickness="1"
                    Margin="0,10,10,0">
                <StackPanel Orientation="Vertical">
                    <!-- Titre : "Élément à tester" -->
                    <TextBlock Text="{DynamicResource TestedElement}" Style="{StaticResource TitleTextDark}"
                               Margin="0,0,0,5" />

                    <!-- Tableau principal : Cmd(s) et IE(s)-->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />   <!--"Envoi" + Réception-->
                            <RowDefinition Height="Auto" />   <!--"Type de DPT" + Type(s) Cmd + Type(s) IE-->
                            <RowDefinition Height="Auto" />   <!--"Adresse liée" + @Cmd + @IE-->
                            <RowDefinition Height="Auto" />
                            <!--"Valeurs" + Valeur(s) Cmd + Valeur(s) IE + Bouton supprimer Test-->
                            <RowDefinition Height="Auto" />   <!--Bouton ajouter Test-->
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />  <!--Titres-->
                            <ColumnDefinition Width="Auto" />  <!--Cmd(s)-->
                            <ColumnDefinition Width="Auto" />  <!--IE(s) + Remove Test-->
                            <ColumnDefinition Width="Auto" />  <!--Add Test-->
                        </Grid.ColumnDefinitions>

                        <!--Colonne 1 : Titres-->
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="{DynamicResource DptType}"
                                   Style="{StaticResource StandardTextBlockDark}"
                                   Margin="3,0,2,0" />
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="{DynamicResource LinkedAddress}"
                                   Style="{StaticResource StandardTextBlockDark}" Margin="3,0,2,0" />
                        <StackPanel Grid.Row="3" Grid.Column="0" Orientation="Horizontal" Margin="3,10,2,0">
                            <Image Style="{StaticResource TooltipImage}"
                                   Height="15"
                                   VerticalAlignment="Top"
                                   HorizontalAlignment="Left"
                                   Margin="0,1,3,0">
                                <ToolTipService.ToolTip>
                                    <ToolTip Background="{StaticResource DarkGrayBackgroundBrush}"
                                             BorderBrush="{StaticResource KnxGreenBrush}">
                                        <StackPanel Orientation="Vertical">
                                            <TextBlock Foreground="{StaticResource KnxLightGreenBrush}"
                                                       FontWeight="SemiBold"
                                                       Text="{DynamicResource ValuesTooltipTitle}"/>
                                            <TextBlock Style="{StaticResource StandardTextBlockDark}"
                                                       Text="{DynamicResource ValuesTooltipMessage}"/>
                                        </StackPanel>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                            </Image>
                            <TextBlock Text="{DynamicResource Values}"
                                       Style="{StaticResource StandardTextBlockDark}"
                                       VerticalAlignment="Top"/>
                        </StackPanel>

                        <!--Colonne 2 : Cmd(s)-->
                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{DynamicResource Dispatch(es)}" Margin="5,0,0,0" Style="{StaticResource StandardTextBlockDark}"/>
                        <!--Type de DPT de l'envoi-->
                        <Border Grid.Row="1" Grid.Column="1" Background="{StaticResource DarkGrayBackgroundBrush}">
                            <ListBox
                                ItemsSource="{Binding TestsCmd}"
                                Background="{StaticResource NoColorBrush}"
                                ItemContainerStyle="{StaticResource DptLisBoxItemContainerStyleDark}">

                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" Background="{StaticResource NoColorBrush}" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <!--Explication double border : border intérieure => style + marge, border extérieure => background derrière la marge-->
                                        <Border Background="{StaticResource DarkGrayBackgroundBrush}">
                                            <Border
                                                Width="{Binding DataContext.BoxWidth, RelativeSource={RelativeSource AncestorType=Window}}"
                                                Height="35"
                                                Margin="0,0,14,0"
                                                Style="{StaticResource ValueBorderDark}">
                                                <TextBlock Text="{Binding Type}"
                                                           Foreground="{StaticResource DarkForegroundBrush}"
                                                           Background="{StaticResource DarkerGrayBackgroundBrush}"
                                                           VerticalAlignment="Center"
                                                           TextAlignment="Center" />
                                            </Border>
                                        </Border>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Border>
                        <!--Adresses de l'envoi-->
                        <Border Grid.Row="2" Grid.Column="1">
                            <ListBox
                                ItemsSource="{Binding TestsCmd}"
                                Background="{StaticResource DarkGrayBackgroundBrush}"
                                ItemContainerStyle="{StaticResource DptLisBoxItemContainerStyleDark}">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"
                                                    VerticalAlignment="Top" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <!--Explication double border : border intérieure => style + marge, border extérieure => background derrière la marge-->
                                        <Border Background="{StaticResource DarkGrayBackgroundBrush}">
                                            <Border
                                                Width="{Binding DataContext.BoxWidth, RelativeSource={RelativeSource AncestorType=Window}}"
                                                Height="35"
                                                Margin="0,0,14,0"
                                                Style="{StaticResource ValueBorderDark}">
                                                <TextBox Text="{Binding Address}"
                                                         VerticalAlignment="Center"
                                                         TextAlignment="Center"
                                                         IsReadOnly="True"
                                                         Foreground="{StaticResource DarkForegroundBrush}"
                                                         Background="{StaticResource DarkerGrayBackgroundBrush}"
                                                         BorderThickness="0" />
                                            </Border>
                                        </Border>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Border>
                        <!--Valeurs de l'envoi-->
                        <Border Grid.Row="3" Grid.Column="1">
                            <ListBox ItemsSource="{Binding TestsCmd}"
                                     Background="{StaticResource DarkGrayBackgroundBrush}"
                                     ItemContainerStyle="{StaticResource DptLisBoxItemContainerStyleDark}">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <ItemsControl ItemsSource="{Binding IntValue}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel Orientation="Vertical" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBox
                                                            Text="{Binding BigIntegerValue, Converter={StaticResource BigIntegerConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                            HorizontalContentAlignment="Center"
                                                            VerticalContentAlignment="Center"
                                                            Width="{Binding DataContext.BoxWidth, RelativeSource={RelativeSource AncestorType=Window}}"
                                                            Height="35"
                                                            IsReadOnly="True"
                                                            Foreground="{StaticResource DarkForegroundBrush}"
                                                            Background="{StaticResource DarkerGrayBackgroundBrush}"
                                                            VerticalAlignment="Center">
                                                            <!--Disable the textbox if the expected value is unknown-->
                                                            <TextBox.Style>
                                                                <Style TargetType="TextBox">
                                                                    <Setter Property="IsEnabled" Value="True" />
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding IsEnabled}"
                                                                            Value="false ">
                                                                            <Setter Property="IsEnabled" Value="False" />
                                                                            <Setter Property="Foreground"
                                                                                Value="{StaticResource NoColorBrush}" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </TextBox.Style>
                                                        </TextBox>
                                                        <!--Button to reset the content of a Value that has been deactivated-->
                                                        <Border Background="{StaticResource DarkGrayBackgroundBrush}">
                                                            <StackPanel Orientation="Vertical"
                                                                        HorizontalAlignment="Left"
                                                                        VerticalAlignment="Bottom">
                                                                <Button
                                                                    HorizontalAlignment="Left"
                                                                    VerticalAlignment="Bottom"
                                                                    Margin="2,0,0,0"
                                                                    IsEnabled="False"
                                                                    Style="{StaticResource ResetValueButtonStyle}"
                                                                    Visibility="Hidden">
                                                                    <TextBlock Text="⟲" FontSize="8" Margin="1"
                                                                               HorizontalAlignment="Center"
                                                                               VerticalAlignment="Center" />
                                                                </Button>
                                                            </StackPanel>
                                                        </Border>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Border>

                        <!--Colonne 3 : IE(s)-->
                        <TextBlock Grid.Row="0" Grid.Column="2" Text="{DynamicResource Reception(s)}" Style="{StaticResource StandardTextBlockDark}" Margin="5,0,0,0" />
                        <!--Type de DPT à recevoir-->
                        <ListBox Grid.Row="1" Grid.Column="2"
                                 ItemsSource="{Binding TestsIe}"
                                 Background="{StaticResource DarkGrayBackgroundBrush}"
                                 ItemContainerStyle="{StaticResource DptLisBoxItemContainerStyleDark}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <!--Explication double border : border intérieure => style + marge, border extérieure => background derrière la marge-->
                                    <Border Background="{StaticResource DarkGrayBackgroundBrush}">
                                        <Border
                                            Width="{Binding DataContext.BoxWidth, RelativeSource={RelativeSource AncestorType=Window}}"
                                            Height="35"
                                            Margin="0,0,14,0"
                                            Style="{StaticResource ValueBorderDark}">
                                            <TextBlock Text="{Binding Type}"
                                                       TextAlignment="Center"
                                                       Style="{StaticResource StandardTextBlockDark}"
                                                       Background="{StaticResource DarkerGrayBackgroundBrush}" />
                                        </Border>
                                    </Border>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <!--Adresses de la réception-->
                        <ListBox Grid.Row="2" Grid.Column="2"
                                 ItemsSource="{Binding TestsIe}"
                                 Background="{StaticResource DarkGrayBackgroundBrush}"
                                 ItemContainerStyle="{StaticResource DptLisBoxItemContainerStyleDark}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"
                                                VerticalAlignment="Top" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <!--Explication double border : border intérieure => style + marge, border extérieure => background derrière la marge-->
                                    <Border Background="{StaticResource DarkGrayBackgroundBrush}">
                                        <Border
                                            Width="{Binding DataContext.BoxWidth, RelativeSource={RelativeSource AncestorType=Window}}"
                                            Height="35"
                                            Margin="0,0,14,0"
                                            Style="{StaticResource ValueBorderDark}">
                                            <TextBox Text="{Binding Address}"
                                                     VerticalAlignment="Center"
                                                     TextAlignment="Center"
                                                     IsReadOnly="True"
                                                     Foreground="{StaticResource DarkForegroundBrush}"
                                                     Background="{StaticResource DarkerGrayBackgroundBrush}"
                                                     BorderThickness="0" />
                                        </Border>
                                    </Border>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <!--Valeurs de la réception-->
                        <ListBox Grid.Row="3" Grid.Column="2"
                                 ItemsSource="{Binding TestsIe}"
                                 Background="{StaticResource DarkGrayBackgroundBrush}"
                                 ItemContainerStyle="{StaticResource DptLisBoxItemContainerStyleDark}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <ItemsControl ItemsSource="{Binding IntValue}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Vertical" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBox
                                                        Text="{Binding BigIntegerValue, Converter={StaticResource BigIntegerConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        HorizontalContentAlignment="Center"
                                                        VerticalContentAlignment="Center"
                                                        IsReadOnly="True"
                                                        Width="{Binding DataContext.BoxWidth, RelativeSource={RelativeSource AncestorType=Window}}"
                                                        Foreground="{StaticResource DarkForegroundBrush}"
                                                        Background="{StaticResource DarkerGrayBackgroundBrush}"
                                                        Height="35">

                                                        <!--Disable the textbox if the expected value is unknown-->
                                                        <TextBox.Style>
                                                            <Style TargetType="TextBox">
                                                                <Setter Property="IsEnabled" Value="True" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsEnabled}"
                                                                        Value="false">
                                                                        <Setter Property="IsEnabled" Value="False" />
                                                                        <Setter Property="Foreground"
                                                                            Value="{StaticResource NoColorBrush}" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBox.Style>
                                                    </TextBox>
                                                    <!--Button to deactivate/reset the content of a Value that has been deactivated-->
                                                    <Border Background="{StaticResource DarkGrayBackgroundBrush}">
                                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Left"
                                                                    VerticalAlignment="Bottom">
                                                            <Button
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Bottom"
                                                                Margin="2,0,0,2"
                                                                IsEnabled="False"
                                                                Style="{StaticResource DeactivateValueButtonStyle}"
                                                                Visibility="Hidden">
                                                                <TextBlock Text="x" FontSize="8" Margin="1"
                                                                           Style="{StaticResource StandardTextBlockDark}"
                                                                           HorizontalAlignment="Center"
                                                                           />
                                                            </Button>
                                                            <Button
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Bottom"
                                                                Margin="2,0,0,0"
                                                                Style="{StaticResource ResetValueButtonStyle}"
                                                                IsEnabled="False"
                                                                Visibility="Hidden">
                                                                <TextBlock Text="⟲" FontSize="8" Margin="1"
                                                                           HorizontalAlignment="Center"
                                                                           Style="{StaticResource StandardTextBlockDark}"
                                                                           />
                                                            </Button>
                                                        </StackPanel>
                                                    </Border>
                                                    <!--Button to remove a Test line, should only appear to the right of the last Value of the Test-->
                                                    <Border Background="{StaticResource DarkGrayBackgroundBrush}">
                                                        <Button
                                                            Margin="10,0,0,0"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Center"
                                                            Visibility="Collapsed"
                                                            Style="{StaticResource RemoveTestButtonStyleDark}">
                                                        </Button>
                                                    </Border>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <!--Colonne 4 : Bouton ajouter test-->
                        <Button Grid.Row="4" Grid.Column="3"
                                Margin="5"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                IsEnabled="False"
                                Style="{StaticResource AddTestButtonStyleDark}"
                                Visibility="Hidden"/>
                    </Grid>
                </StackPanel>
            </Border>
        </DataTemplate>
        
        <!-- Styles pour les Modèles Fonctionnels choisis, l'image pour test n'est pas implémentée -->
        <DataTemplate x:Key="ListBoxItemLight" DataType="{x:Type viewmodel:TestedFunctionalModel}">
            <StackPanel Orientation="Horizontal">
                <Image x:Name="TagImage"
                       Source="{StaticResource WaitImage}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Margin="0,0,5,0"
                       Visibility="Visible"
                       Height="10"
                       Width="10"/>
                <TextBlock Name="InterfaceItemsText" 
                           Text="{Binding Path=FunctionalModel.FullName}"
                           Style="{StaticResource ItalicTextBlockLight}"
                />
            </StackPanel>
        </DataTemplate>
        
        <DataTemplate x:Key="WaitListBoxItemLight" DataType="{x:Type viewmodel:TestedFunctionalModel}">
            <StackPanel Orientation="Horizontal">
                <Image x:Name="TagImage"
                       Source="{StaticResource WaitImage}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Margin="0,0,5,0"
                       Visibility="Visible"
                       Height="10" 
                       Width="10"/>
                <TextBlock Name="InterfaceItemsText" 
                           Text="{Binding Path=FunctionalModel.FullName}"
                           Style="{StaticResource ItalicTextBlockLight}"
                />
            </StackPanel>
        </DataTemplate>
        
        <DataTemplate x:Key="RunListBoxItemLight" DataType="{x:Type viewmodel:TestedFunctionalModel}">
            <StackPanel Orientation="Horizontal">
                <Image x:Name="TagImage"
                       Source="{StaticResource RunningImage}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Margin="0,0,5,0"
                       Visibility="Visible"
                       Height="10" 
                       Width="10"/>
                <TextBlock Name="InterfaceItemsText" 
                           Text="{Binding Path=FunctionalModel.FullName}"
                           Style="{StaticResource ItalicTextBlockLight}"
                />
            </StackPanel>
        </DataTemplate>
        
        <DataTemplate x:Key="FinListBoxItemLight" DataType="{x:Type viewmodel:TestedFunctionalModel}">
            <StackPanel Orientation="Horizontal">
                <Image x:Name="TagImage"
                       Source="{StaticResource FinishedImage}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Margin="0,0,5,0"
                       Visibility="Visible"
                       Height="10" 
                       Width="10"/>
                <TextBlock Name="InterfaceItemsText" 
                           Text="{Binding Path=FunctionalModel.FullName}"
                           Style="{StaticResource ItalicTextBlockLight}"
                />
            </StackPanel>
        </DataTemplate>
        
        <DataTemplate x:Key="InvListBoxItemLight" DataType="{x:Type viewmodel:TestedFunctionalModel}">
            <StackPanel Orientation="Horizontal">
                <Image x:Name="TagImage"
                       Source="{StaticResource WaitImage}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Margin="0,0,5,0"
                       Visibility="Collapsed"
                       Height="10" 
                       Width="10"/>
                <TextBlock Name="InterfaceItemsText" 
                           Text="{Binding Path=FunctionalModel.FullName}"
                           Style="{StaticResource ItalicTextBlockLight}"
                />
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="WaitListBoxItemDark" DataType="{x:Type viewmodel:TestedFunctionalModel}">
            <StackPanel Orientation="Horizontal">
                <Image x:Name="TagImage"
                       Source="{StaticResource WaitImage}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Margin="0,0,5,0"
                       Visibility="Visible"
                       Height="10" 
                       Width="10"/>
                <TextBlock Name="InterfaceItemsText" 
                           Text="{Binding Path=FunctionalModel.FullName}"
                           Style="{StaticResource ItalicTextBlockDark}"
                />
            </StackPanel>
        </DataTemplate>
        
        <DataTemplate x:Key="RunListBoxItemDark" DataType="{x:Type viewmodel:TestedFunctionalModel}">
            <StackPanel Orientation="Horizontal">
                <Image x:Name="TagImage"
                       Source="{StaticResource RunningImage}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Margin="0,0,5,0"
                       Visibility="Visible"
                       Height="10" 
                       Width="10"/>
                <TextBlock Name="InterfaceItemsText" 
                           Text="{Binding Path=FunctionalModel.FullName}"
                           Style="{StaticResource ItalicTextBlockDark}"
                />
            </StackPanel>
        </DataTemplate>
        
        <DataTemplate x:Key="FinListBoxItemDark" DataType="{x:Type viewmodel:TestedFunctionalModel}">
            <StackPanel Orientation="Horizontal">
                <Image x:Name="TagImage"
                       Source="{StaticResource FinishedImage}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Margin="0,0,5,0"
                       Visibility="Visible"
                       Height="10" 
                       Width="10"/>
                <TextBlock Name="InterfaceItemsText" 
                           Text="{Binding Path=FunctionalModel.FullName}"
                           Style="{StaticResource ItalicTextBlockDark}"
                />
            </StackPanel>
        </DataTemplate>
        
        <DataTemplate x:Key="InvListBoxItemDark" DataType="{x:Type viewmodel:TestedFunctionalModel}">
            <StackPanel Orientation="Horizontal">
                <Image x:Name="TagImage"
                       Source="{StaticResource WaitImage}"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"
                       Margin="0,0,5,0"
                       Visibility="Collapsed"
                       Height="10" 
                       Width="10"/>
                <TextBlock Name="InterfaceItemsText" 
                           Text="{Binding Path=FunctionalModel.FullName}"
                           Style="{StaticResource ItalicTextBlockDark}"
                />
            </StackPanel>
        </DataTemplate>

        <!-- Styles pour la liste des Modèles Fonctionnels choisis -->
        <Style x:Key="ListBoxStyleLight" TargetType="ListBox" BasedOn="{StaticResource StandardListBoxLight}">
            <Setter Property="Background" Value="{StaticResource OffWhiteBackgroundBrush}"/> 
        </Style>
        
        <!-- ReSharper disable once Xaml.RedundantResource -->
        <Style x:Key="ListBoxStyleDark" TargetType="ListBox" BasedOn="{StaticResource StandardListBoxDark}">
            <Setter Property="Background" Value="{StaticResource DarkGrayBackgroundBrush}"/> 
        </Style>

        <!-- Styles pour le bouton de lancer de test -->
        <Style x:Key="LaunchTestButtonStyleLight" TargetType="Button" BasedOn="{StaticResource IconTextButtonStyle}">
            <Setter Property="Background" Value="{StaticResource GrayBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource DarkGrayBackgroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            <Setter Property="BorderThickness" Value=" 1"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource LightGrayMouseOverBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource GrayBackgroundBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ReSharper disable once Xaml.RedundantResource -->
        <Style x:Key="LaunchTestButtonStyleDark" TargetType="Button" BasedOn="{StaticResource IconTextButtonStyle}">
            <Setter Property="Background" Value="{StaticResource BlueBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource LightGrayBorderBrush}"/>
            <Setter Property="BorderThickness" Value=" 1"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource BlueAccentBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{StaticResource BlueAccentMoreBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>


    <!-- ScrollViewer qui contient tout le contenu pour que le scaling n'entasse pas tout -->
    <ScrollViewer BorderBrush="{StaticResource KnxGreenBrush}"
            BorderThickness="0" x:Name="TestConfigWindowBorder"
            HorizontalScrollBarVisibility="Auto"
            VerticalScrollBarVisibility="Auto">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="850" Width="Auto" />
                <ColumnDefinition MinWidth="250" Width="*" />
            </Grid.ColumnDefinitions>


            <Border Grid.Column="0" Name="AllModelsAndElementsColumn"
                    BorderBrush="{StaticResource GrayBorderBrush}" 
                    BorderThickness="1">

                <Grid><!-- Define rows and columns for the nested grid -->
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />  <!-- Titres  -->
                        <RowDefinition Height="*" />     <!-- Contenu -->
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="250" /> <!-- Structures -->
                        <ColumnDefinition Width="300" /> <!-- FunctionalModels -->
                        <ColumnDefinition Width="400" /> <!-- TestedElements -->
                    </Grid.ColumnDefinitions>


                    <!-- Première colonne
                Bibliothèque des Structures de Modèle Fonctionnel
                Contient toutes les Structures de Modèle Fonctionnel (çàd non instanciées), prédéfinies ou crées (ou suggérées (IA))
                ex : Structure de Modèle Fonctionnel pour les lampes
                -->

                    <!-- En-tête colonne 1 -->
                    <Border Grid.Row="0" Grid.Column="0"
                            x:Name="BorderStructBib"
                            Style="{StaticResource BorderLight}"
                            BorderThickness="0,0,1,1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" /> <!-- Titre avec son icon-->
                                <ColumnDefinition Width="Auto" /> <!--Bouton de recherche-->
                            </Grid.ColumnDefinitions>

                            <!-- Bandeau supérieur -->
                            <StackPanel Grid.Column="0"
                                        Background="{StaticResource NoColorBrush}"
                                        Orientation="Horizontal"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Margin="10,0">
                                <Image Source="{StaticResource LibraryDrawingImage}" Height="20" />
                                <TextBlock x:Name="StructBibTitleText"
                                           Style="{StaticResource TitleTextLight}"
                                           Text="{DynamicResource Library}" />
                            </StackPanel>

                            <!-- Bouton de recherche,(Non-implémenté)-->
                            <Button Grid.Column="1"
                                    x:Name="SearchDefStructButton"
                                    HorizontalAlignment="Right"
                                    Style="{StaticResource SearchButtonLight}"
                                    BorderThickness="1"
                                    Margin="5"
                                    Padding="5"
                                    Height="30"
                                    Visibility="Hidden"/>
                        </Grid>
                    </Border>

                    <!-- Contenu colonne 1 : liste des Structures de Modèles Fonctionnels : prédéfinis, créés et suggérés -->
                    <Border Grid.Row="1" Grid.Column="0"
                            x:Name="BorderAllStruct"
                            Style="{StaticResource BorderLight}"
                            BorderThickness="0,0,1,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />      <!-- Titre des modèles prédéfinis-->
                                <RowDefinition Height="*" />         <!-- Liste des modèles prédéfinis-->
                            </Grid.RowDefinitions>

                            <!-- Titre Structures prédéfinies-->
                            <Border Grid.Row="0"
                                    x:Name="BorderDefStructTitle"
                                    Style="{StaticResource BorderTitleLight}"
                                    BorderThickness="0,0,0,2"
                                    Padding="5">
                                <TextBlock x:Name="BorderDefStructTitleText"
                                           Style="{StaticResource TitleTextLight}"
                                           Text="{DynamicResource PredefinedStructures}" />
                            </Border>

                            <ListBox Grid.Row="1"
                                     x:Name="DefStructureBox"
                                     ItemsSource="{Binding Structures}"
                                     SelectedItem="{Binding SelectedStructureTestWindow,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     ScrollViewer.VerticalScrollBarVisibility="Visible"
                                     ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                     ScrollViewer.CanContentScroll="False"
                                     ScrollViewer.PanningMode="VerticalOnly"
                                     IsManipulationEnabled="True"
                                     ItemContainerStyle="{StaticResource ModelListBoxItemStyleLight}">
                            </ListBox>
                        </Grid>
                    </Border>

                    <!-- Deuxième colonne
                Liste des Modèles Fonctionnels correspondant à la Structure Sélectionnée
                Contient tous les Modèles Fonctionnels qui ont été créés à partir de la Structure sélectionnée
                ex : tous les Modèles Fonctionnels pour toutes les lampes de l'installation
                -->

                    <!-- En-tête colonne 2-->
                    <Border Grid.Row="0" Grid.Column="1"
                            x:Name="BorderModelBib"
                            Style="{StaticResource BorderLight}"
                            BorderThickness="0,0,1,1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" /> <!-- Titre avec son icon-->
                                <ColumnDefinition Width="Auto" /> <!--Bouton de recherche-->
                            </Grid.ColumnDefinitions>

                            <StackPanel Background="{StaticResource NoColorBrush}" Orientation="Horizontal"
                                        Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"
                                        Margin="10,0">
                                <Image Source="{StaticResource FunctionalModelDrawingImage}" Height="20" />
                                <TextBlock x:Name="ModelBibText"
                                           Style="{StaticResource TitleTextLight}"
                                           Text="{DynamicResource ModelsTitle}" />
                            </StackPanel>

                            <!-- Bouton de recherche,(Non-implémenté)-->
                            <Button Grid.Column="1"
                                    x:Name="SearchModelButton"
                                    HorizontalAlignment="Right"
                                    Style="{StaticResource SearchButtonLight}"
                                    BorderThickness="1"
                                    Margin="5"
                                    Padding="5"
                                    Height="30"
                                    Visibility="Hidden"/>
                        </Grid>
                    </Border>

                    <!-- Contenu colonne 2 : liste des Modèles Fonctionnels correspondant à la Structure sélectionnée-->
                    <Border Grid.Row="1" Grid.Column="1"
                            x:Name="BorderAllModels"
                            Style="{StaticResource BorderLight}"
                            BorderThickness="0,0,1,0">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" /> <!-- Titre structure -->
                                <RowDefinition Height="*" /><!-- Listes modèles-->
                            </Grid.RowDefinitions>

                            <!-- Titre Structure-->
                            <Border Grid.Row="0"
                                    x:Name="BorderModelTitle"
                                    Style="{StaticResource BorderTitleLight}"
                                    BorderThickness="0,0,0,2"
                                    Padding="5">

                                <TextBlock Style="{StaticResource TitleTextLight}"
                                           x:Name="BorderModelsTitleText"
                                           Text="{Binding Path='SelectedStructureTestWindow.FullName', FallbackValue=''}" />
                            </Border>

                            <ListBox Grid.Row="1"
                                     x:Name="ModelsBox"
                                     ItemsSource="{Binding SelectedModelsTestWindow, UpdateSourceTrigger=PropertyChanged}"
                                     SelectedItem="{Binding SelectedModelTestWindow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     ScrollViewer.VerticalScrollBarVisibility="Visible"
                                     ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                     ScrollViewer.CanContentScroll="False"
                                     ScrollViewer.PanningMode="VerticalOnly"
                                     IsManipulationEnabled="True"
                                     ItemContainerStyle="{StaticResource ModelListBoxItemStyleLight}">
                            </ListBox>
                        </Grid>
                    </Border>

    <!-- ___________________________________________________________________________________________________________________________________________________________________________________________ -->
                    <!-- Troisième colonne
                    Liste des Éléments à Tester d'un Modèle Fonctionnel
                    Permet d'instancier (adresses et valeurs) tous les Éléments à Tester de la Structure du Modèle Fonctionnel Sélectionné
                    ex : Pour la lampe du salon, tous les Éléments à Tester
                    -->
                    
                    <!-- En-tête colonne 3 -->
                    <Border Grid.Row="0" Grid.Column="2"
                            x:Name="BorderElement"
                            Style="{StaticResource BorderLight}"
                            BorderThickness="0,0,1,1" >
                        
                        <Grid>
                            <!-- Titre -->
                            <TextBlock 
                                x:Name="ModelSettingsText"
                                Style="{StaticResource TitleTextLight}"
                                Text="{DynamicResource ModelsParametersTitle}"
                                HorizontalAlignment="Center"
                                Margin="5,0"
                            />
                        </Grid>
                    </Border>
                    
                    <!-- Contenu colonne 3 : liste des Éléments à Tester -->
                    <Border Grid.Row="1" Grid.Column="2" 
                            x:Name="BorderAllElements"
                            BorderBrush="{StaticResource GrayBorderBrush}"
                            BorderThickness="0,0,1,0" >
                        <Grid Margin="0,0,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/> <!--Nom du MF-->
                                <RowDefinition Height="*"/>    <!-- Conteneur principal -->
                            </Grid.RowDefinitions>
                            <!--Nom du Modèle Fonctionnel-->
                            <Border x:Name="BorderModelNameTitle" Grid.Row="0" 
                                    Style="{StaticResource BorderTitleLight}"
                                    BorderThickness="0,0,0,2"
                                    Padding="5"
                                    Margin="0">
                                <StackPanel  Orientation="Horizontal">
                                    <TextBlock Text="{DynamicResource Name:}" 
                                               x:Name="NameTextBlock"
                                               Style="{StaticResource TitleTextLight}"
                                               Margin="15,0,0,0"/>
                                    <TextBox x:Name="NomTextBox" 
                                             Style="{StaticResource StandardTextBoxLight}"
                                             HorizontalContentAlignment="Stretch"
                                             FontSize="16"
                                             FontWeight="SemiBold"
                                             Width="200"
                                             IsReadOnly="True"
                                             Text="{Binding SelectedModelTestWindow.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}"
                                             Margin="15,0,0,0"/>
                                </StackPanel>
                            </Border>
                        <!-- Modèle Fonctionnel -->
                        <ListBox Grid.Row="1" Name="SelectedElementsListBox"
                                 Margin="10,0,0,0"
                                 ItemsSource="{Binding SelectedModelTestWindow.ElementList, FallbackValue=''}"
                                 Background="{StaticResource OffWhiteBackgroundBrush}"
                                 Height="Auto"
                                 ItemContainerStyle="{StaticResource TestedElementItemContainerStyleLight}"
                                 ScrollViewer.VerticalScrollBarVisibility="Visible"
                                 ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                 ScrollViewer.CanContentScroll="False"
                                 ScrollViewer.PanningMode="VerticalOnly"
                                 IsManipulationEnabled="True"
                                 ItemTemplate="{StaticResource ElementListBoxTemplateLight}">
                        </ListBox>
                        </Grid>
                    </Border>
                </Grid>
            </Border>
            
    <!-- ___________________________________________________________________________________________________________________________________________________________________________________________ -->

            <Border Grid.Column="1" Name="ChosenModelsColumn"
                    Style="{StaticResource BorderTitleLight}"
                    BorderThickness="1,0,0,0">

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition MinHeight="25" Height="Auto" />
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" />
                        <!-- Titre Modèles Fonctionnels sélectionnés-->
                        <RowDefinition MinHeight="400" Height="*" />         <!-- TextBox avec les modèles -->
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto" />                      <!-- Bouton de Lancement de Tests-->
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0"
                               Name="ChosenTestModelesTitle"
                               Style="{StaticResource TitleTextLight}"
                               HorizontalAlignment="Center"
                               Text="{DynamicResource ChosenTestModelsTitle}" />
                    
                    <StackPanel Grid.Row="1" HorizontalAlignment="Center" Orientation="Horizontal" Margin="10,50,0,0">
                        <TextBlock Name="AnalysisDelay"
                                   Style="{StaticResource StandardTextBlockLight}"
                                   HorizontalAlignment="Left"
                                   TextAlignment="Left"
                                   TextWrapping="Wrap"
                                   Width="175"
                                   Text="{DynamicResource AnalysisDelayText}"/>
                        <TextBox Name="DelayBox"
                                 Style="{StaticResource StandardTextBoxLight}"
                                 Width="45"
                                 Margin="5,0"
                                 Text="{Binding ElementLatency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    </StackPanel>
                    <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="10,10,0,0">
                        
                        <TextBlock Name="AnalysisTimeout"
                                   Style="{StaticResource StandardTextBlockLight}"
                                   HorizontalAlignment="Left"
                                   TextAlignment="Left"
                                   TextWrapping="Wrap"
                                   Width="175"
                                   Text="{DynamicResource AnalysisTimeoutText}"/>
                        <TextBox Name="TimeoutBox"
                                 Style="{StaticResource StandardTextBoxLight}"
                                 HorizontalAlignment="Right"
                                 Margin="5,0"
                                 Width="45"
                                 Text="{Binding CommandTimeout, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                    </StackPanel>
                    <ListBox Grid.Row="3" Name="ChosenTestModelesListBox" Width="200" Height="320"
                             Style="{StaticResource ListBoxStyleLight}"
                             ItemsSource="{Binding ChosenModelsAndState}"
                             SelectionMode="Single"
                             ItemContainerStyle="{StaticResource ListBoxContainerLight}"
                             ItemTemplateSelector="{StaticResource ChosenModelTemplateSelector}">
                    </ListBox>
                    
                    <StackPanel Grid.Row="4"
                                Orientation="Horizontal"
                                HorizontalAlignment="Right">
                        <Image Style="{StaticResource TooltipImage}"
                               Height="15"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Left"
                               Margin="0,5,5,0">
                            <ToolTipService.ToolTip>
                                <ToolTip Background="{DynamicResource CurrentTooltipBackgroundBrush}"
                                         BorderBrush="{StaticResource KnxGreenBrush}">
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Foreground="{StaticResource KnxGreenBrush}"
                                                   FontWeight="SemiBold"
                                                   Text="{DynamicResource ClearTooltipTitle}"/>
                                        <TextBlock Style="{DynamicResource CurrentTooltipTextBlockStyle}"
                                                   Text="{DynamicResource ClearTooltipMessage}">
                                        </TextBlock>
                                    </StackPanel>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                        </Image>
                        <Button Name="ClearTestButton"
                                Content="{DynamicResource ClearTest}"
                                Style="{StaticResource LaunchTestButtonStyleLight}"
                                Margin="7"
                                MinHeight="50"
                                Click="OnClearButtonClick_ClearModelsToTest" />
                    </StackPanel>

                    <StackPanel Grid.Row="5"
                                Orientation="Horizontal"
                                HorizontalAlignment="Right">
                        <Image Style="{StaticResource TooltipImage}"
                               Height="15"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Left"
                               Margin="0,5,5,0">
                            <ToolTipService.ToolTip>
                                <ToolTip Background="{DynamicResource CurrentTooltipBackgroundBrush}"
                                         BorderBrush="{StaticResource KnxGreenBrush}">
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock Foreground="{StaticResource KnxGreenBrush}"
                                                   FontWeight="SemiBold"
                                                   Text="{DynamicResource TestConfigurationTooltipTitle}"/>
                                        <TextBlock Style="{DynamicResource CurrentTooltipTextBlockStyle}"
                                                   Text="{DynamicResource TestConfigurationTooltipMessage}">
                                        </TextBlock>
                                    </StackPanel>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                        </Image>
                        <Button Name="LaunchTestButton"
                                Content="{DynamicResource LaunchTest}"
                                Style="{StaticResource LaunchTestButtonStyleLight}"
                                Tag="{StaticResource PlayDrawingImage}"
                                Margin="7,0,7,7"
                                MinHeight="50"
                                Click="LaunchTestButton_OnClick" />
                    </StackPanel>

                </Grid>
            </Border>


        </Grid>

    </ScrollViewer>
</mah:MetroWindow>